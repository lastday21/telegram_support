from telegram import Update
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler,
    ContextTypes, filters
)
from telegram.request import HTTPXRequest
from config import TG_BOT_TOKEN
from ai_solver import solve_text
from hotkey_listener import PROMPTS    # —Å–ø–∏—Å–æ–∫ Alt+1‚Ä¶9


request = HTTPXRequest(connect_timeout=20, read_timeout=20)

app = (
    ApplicationBuilder()
    .token(TG_BOT_TOKEN)
    .request(request)
    .concurrent_updates(True)   # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∞–ø–¥–µ–π—Ç—ã –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    .build()
)

HELP = (
    "/help ‚Äì —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
    "/prompts ‚Äì —Å–ø–∏—Å–æ–∫ –ø–æ–¥—Å–∫–∞–∑–æ–∫ (Alt+1‚Ä¶9)\n"
    "/p <n> ‚Äì –æ—Ç–≤–µ—Ç –ø–æ –ø–æ–¥—Å–∫–∞–∑–∫–µ ‚Ññn\n"
    "–õ—é–±–æ–π –¥—Ä—É–≥–æ–π —Ç–µ–∫—Å—Ç ‚Üí –æ—Ç–≤–µ—Ç GPT."
)

async def cmd_help(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(HELP)

async def cmd_prompts(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    txt = "\n".join(f"{i}. {p.splitlines()[0][:60]}‚Ä¶" for i, p in enumerate(PROMPTS, 1))
    await update.message.reply_text(txt)

async def cmd_p(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    try:
        n = int(ctx.args[0]); assert 1 <= n <= len(PROMPTS)
    except (IndexError, ValueError, AssertionError):
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /p <1-9>")
        return
    await update.message.reply_text("‚åõ –î—É–º–∞—é‚Ä¶")
    await update.message.reply_text(f"üí° {solve_text(PROMPTS[n-1])}")

async def on_msg(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚åõ –î—É–º–∞—é‚Ä¶")
    await update.message.reply_text(f"üí° {solve_text(update.message.text)}")

app.add_handler(CommandHandler(["start", "help"],   cmd_help))
app.add_handler(CommandHandler("prompts",           cmd_prompts))
app.add_handler(CommandHandler("p",                 cmd_p))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, on_msg))

def main() -> None:
    app.run_polling(stop_signals=[])   # –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ—Ç–æ–∫
